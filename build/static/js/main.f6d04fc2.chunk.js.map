{"version":3,"sources":["Component/Header/index.jsx","Component/ListItem/index.jsx","Component/List/index.jsx","Component/Footer/index.jsx","App.jsx","index.js"],"names":["Header","handleKeyUp","e","target","code","value","item","id","nanoid","task","done","props","appGetData","alert","className","onKeyUp","this","type","placeholder","Component","ListItem","state","isHover","handleMouse","boolean","setState","changeDoneState","updateTodo","checked","onMouseLeave","onMouseEnter","style","backgroundColor","onChange","onClick","delTodo","display","List","todos","map","el","key","Footer","handleCheckAll","event","checkAllTodo","clearAllDone","doneItem","reduce","prev","current","window","confirm","clearDone","total","length","doneItems","App","newTodos","localStorage","setItem","JSON","stringify","filter","list","parse","getItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6d04fc2.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { nanoid } from 'nanoid'\r\nimport PropTypes from 'prop-types'\r\nimport './index.css'\r\n\r\nexport default class Header extends Component {\r\n    static propTypes = {\r\n        appGetData: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todo-header\">\r\n                <input onKeyUp={this.handleKeyUp} type=\"text\" placeholder=\"Please insert your Task, and Press Enter Key\" />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleKeyUp = (e) => {\r\n        let { target, code } = e;\r\n\r\n        if(code !== 'Enter') return\r\n        if(target.value === '') {\r\n            alert(\"Insertion shouldn't be blanked\");\r\n            return\r\n        }\r\n\r\n        const item = {\r\n            id: nanoid(),\r\n            task: target.value,\r\n            done: false\r\n        }\r\n        this.props.appGetData(item);\r\n        target.value = '';\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class ListItem extends Component {\r\n    state = {\r\n        isHover: false\r\n    }\r\n\r\n    static propTypes = {\r\n        updateTodo: PropTypes.func.isRequired,\r\n        delTodo: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        const {id, task, done} = this.props;\r\n        const {isHover} = this.state;\r\n        return (\r\n            <li onMouseLeave={this.handleMouse(false)} onMouseEnter={this.handleMouse(true)} style={{backgroundColor: isHover ? '#888' : '#222'}}>\r\n                <label>\r\n                    <input type=\"checkbox\" checked={done} onChange={this.changeDoneState(id)}/>\r\n                    <span>\r\n                        {task}\r\n                    </span>\r\n                </label>\r\n                <button onClick={()=> this.props.delTodo(id)} className=\"btn btn-danger\" style={{ display: isHover ? 'block' : 'none' }}>Delete</button>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    handleMouse = (boolean) => {\r\n        return ()=>{\r\n            this.setState({isHover: boolean});\r\n        }\r\n    }\r\n\r\n    changeDoneState = (id)=> {\r\n        return (e)=> {\r\n            this.props.updateTodo(id, e.target.checked);\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ListItem from '../ListItem'\r\nimport './index.css'\r\n\r\nexport default class List extends Component {\r\n    static propTypes = {\r\n        updateTodo: PropTypes.func.isRequired,\r\n        delTodo: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        const {todos, updateTodo, delTodo} = this.props;\r\n        return (\r\n            <ul className=\"todo-main\">\r\n               {\r\n                   todos.map(el => {\r\n                       return <ListItem delTodo={delTodo} updateTodo={updateTodo} {...el} key={el.id}/>\r\n                   })\r\n               }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport './index.css'\r\n\r\nexport default class Footer extends Component {\r\n    static propTypes = {\r\n        todos: PropTypes.array.isRequired,\r\n        clearDone: PropTypes.func.isRequired,\r\n        checkAllTodo: PropTypes.func.isRequired\r\n    }\r\n    \r\n    render() {\r\n        const {todos} = this.props\r\n        const total = todos.length,\r\n              doneItems = todos.reduce((prev, current) => {\r\n                return current.done ? prev + 1 : prev;\r\n              }, 0)\r\n\r\n        return (\r\n            <div className=\"todo-footer\">\r\n                <label>\r\n                    <input type=\"checkbox\" onChange={this.handleCheckAll} checked={doneItems === total && total !== 0}/>\r\n                </label>\r\n                <span>\r\n                    <span>Finish: {doneItems}</span> / Total: {total}\r\n                </span>\r\n                <button onClick={this.clearAllDone} className=\"btn btn-danger\">Delete Finished Task</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleCheckAll = (event)=> {\r\n        this.props.checkAllTodo(event.target.checked)\r\n    }\r\n\r\n    clearAllDone = ()=> {\r\n        const doneItem = this.props.todos.reduce((prev, current)=> {\r\n            return prev + (current.done ? 1 : 0);\r\n        }, 0)\r\n        \r\n        if(doneItem === 0) return\r\n        if(window.confirm(`Delete ${doneItem} task${doneItem > 1 ? 's' : ''}?`)) {\r\n            this.props.clearDone();\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport Header from './Component/Header'\nimport List from './Component/List'\nimport Footer from './Component/Footer'\nimport './App.css'\n\nexport default class App extends Component {\n    state = {\n        todos: []\n    }\n\n    componentDidMount() {\n        let list = JSON.parse(localStorage.getItem('react_todo_list'));\n        if(list) {\n            this.setState({todos: list});\n        }\n    }\n\n    render() {\n        const { todos } = this.state\n        return (\n            <div className=\"todo-container\">\n                <div className=\"todo-wrap\">\n                    <h1 className=\"title\">To do List</h1>\n                    <Header appGetData={this.appGetData} />\n                    <List delTodo={this.delTodo} updateTodo={this.updateTodo} todos={todos} />\n                    <Footer clearDone={this.clearDone} checkAllTodo={this.checkAllTodo} todos={todos} />\n                </div>\n            </div>\n        )\n    }\n\n    appGetData = (item) => {\n        const { todos } = this.state;\n        const newTodos = [item, ...todos];\n        \n        localStorage.setItem('react_todo_list', JSON.stringify(newTodos));\n        this.setState({ todos:  newTodos});\n    }\n    //透過props將該函式傳入header子組件並且將其內部資料，透過props的this向外傳遞給App組件, 於VUE中則由emit實現\n\n    updateTodo = (id, done) => {\n        const { todos } = this.state;\n        const newTodos = todos.map(el => {\n            if (el.id === id) {\n                return { ...el, done }\n            } else {\n                return el\n            }\n        })\n\n        localStorage.setItem('react_todo_list', JSON.stringify(newTodos));\n        this.setState({ todos: newTodos })\n    }\n    //透過props將該函式傳入header子組件並且將其內部資料，透過props的this向外傳遞給App組件, 於VUE中則由emit實現\n\n    delTodo = (id) => {\n        if (window.confirm('Delete Pernemently?')) {\n            const { todos } = this.state;\n            const newTodos = todos.filter(el => {\n                return id !== el.id\n            })\n\n            localStorage.setItem('react_todo_list', JSON.stringify(newTodos));\n            this.setState({ todos: newTodos });\n        }\n    }\n\n    checkAllTodo = (done) => {\n        const {todos} = this.state;\n        const newTodos = todos.map(el => {\n            return {...el, done}\n        })\n\n        localStorage.setItem('react_todo_list', JSON.stringify(newTodos));\n        this.setState({todos: newTodos});\n    }\n\n    clearDone = ()=> {\n        const {todos} = this.state;\n        const newTodos = todos.filter(el => {\n            return !el.done\n        })\n\n        localStorage.setItem('react_todo_list', JSON.stringify(newTodos));\n        this.setState({todos: newTodos})\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}